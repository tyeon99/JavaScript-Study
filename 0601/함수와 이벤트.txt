함수

함수(function)를 사용하면 무엇이 좋을까?
- 각 명령의 시작과 끝을 명확하게 구별할 수 있다.
- 함수에 별도의 이름을 붙이면 같은 기능이 필요할 때마다 해당 함수를 실행할 수 있다.

함수 선언 ( 함수 정의 )
- 함수가 어떤 명령을 처리해야 할지 미리 알려주는 것
- function 예약어를 사용하고, { } 안에 실행할 명령을 작성

함수 호출 ( 함수 실행 )
- 함수 이름을 사용해 함수 실행

매개변수( parameter ), 인자값
- 함수를 실행하기 위해 필요하다고 지정하는 값
- 함수를 선언할 때 함수 이름 옆의 괄호 안에 매개변수 이름을 넣음

인수 ( argument )
- 함수를 실행하기 위해 필요하다고 지정하는 값
- 함수를 실행할 때 매개변수로 넘겨주는 값

return 문
- 함수를 실행한 결과값을 함수 밖으로 넘기는 문
- 반환된 값은 함수를 호출한 곳으로 넘어감

스코프 ( scope )
- 변수를 선언하고 사용할 때 변수가 적용되는 범위

지역변수 ( local variable )
- 변수를 선언한 함수에서만 사용할 수 있는 변수
- 함수 안에서 변수를 선언할 때 var 예약어 사용

전역 변수 ( global variable )
- 스크립트 소스 전체에서 사용할 수 있는 변수
- 함수 밖이라면 var 예약어를 사용해서 변수 선언
- 함수 내에서 전역 변수를 선언하려면 var 예약어 없이 선언

익명 함수 ( 무명 함수, anonymous function )
- 이름이 없는 함수
- 함수 자체가 '식' 이기 때문에 함수를 변수에 할당하거나 다른 함수의 매개변수로 사용할 수도 있음

즉시 실행 함수
- 함수를 정의함과 동시에 실행하는 함수
- 즉시 실행 함수는 변수에 할당할 수 있고, 함수에서 반환하는 값을 변수에 할당할 수도 있음

이벤트 ( event ) 란
- 웹 브라우저나 사용자가 행하는 동작, 웹 요소를 클릭을 한다던지 마우스가 이동한다던지 등..
- 사용자가 웹 문서 영역을 벗어나 하는 동작은 이벤트가 아님 ex ) 브라우저 창의 제목 표시줄 클릭






















